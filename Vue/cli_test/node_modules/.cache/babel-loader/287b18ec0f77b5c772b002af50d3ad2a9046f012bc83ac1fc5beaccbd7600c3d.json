{"ast":null,"code":"// 该文件专门用于创建整个应用的路由器\nimport VueRouter from \"vue-router\";\nimport About from \"@/pages/About.vue\";\nimport Home from \"@/pages/Home.vue\";\nimport News from \"@/pages/News.vue\";\nimport Message from \"@/pages/Message.vue\";\nimport Detail from \"@/pages/Detail.vue\";\n// 创建并暴露一个路由器\nconst router = new VueRouter({\n  routes: [{\n    name: 'guanyu',\n    path: '/about',\n    component: About\n  }, {\n    name: 'zhuye',\n    path: '/home',\n    component: Home,\n    children: [{\n      name: 'xinwen',\n      path: 'news',\n      component: News,\n      meta: {\n        isAuth: false\n      }\n    }, {\n      name: 'xiaoxi',\n      path: 'message',\n      component: Message,\n      meta: {\n        isAuth: false\n      },\n      children: [{\n        name: 'xiangqing',\n        // detail后面的两个为之后的传参占个位\n        path: 'detail/:id/:title',\n        component: Detail,\n        // props的第一种写法，值为对象，该对象中的所有key-value都会以props的形式传给Detail组件\n        // props: {\n        //     a: 1,\n        //     b: 'hello'\n        // }\n\n        // props的第二种写法，值为布尔值，若布尔值为真，则会把该路由组件收到的所有params参数，以props的形式传给Detail组件\n        // props: true\n\n        // props的第三种写法，值为函数，\n        props($route) {\n          return {\n            id: $route.query.id,\n            title: $route.query.title\n          };\n        }\n      }]\n    }]\n  }]\n});\n\n// 全局前置路由守卫：初始化的时候被调用以及每次路由切换之前自动调用\nrouter.beforeEach((to, from, next) => {\n  console.log(to, from, next);\n  if (to.meta.isAuth) {\n    // 判断是否需要鉴权\n    if (localStorage.getItem('name') === 'xiaohong') {\n      next(); //放行，接着往下走\n    } else {\n      alert('名字有误，没有权限查看！');\n    }\n  } else {\n    next();\n  }\n});\n\n// 后置路由守卫\nrouter.afterEach((to, from, next) => {\n  if (to.meta.isAuth) {\n    // 判断是否需要鉴权\n    if (localStorage.getItem('name') === 'xiaohong') {\n      next(); //放行，接着往下走\n    } else {\n      alert('名字有误，没有权限查看！');\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["VueRouter","About","Home","News","Message","Detail","router","routes","name","path","component","children","meta","isAuth","props","$route","id","query","title","beforeEach","to","from","next","console","log","localStorage","getItem","alert","afterEach"],"sources":["C:/Users/13511/Desktop/Vue/Vue/cli_test/src/router/index.js"],"sourcesContent":["// 该文件专门用于创建整个应用的路由器\r\nimport VueRouter from \"vue-router\";\r\nimport About from \"@/pages/About.vue\";\r\nimport Home from \"@/pages/Home.vue\";\r\nimport News from \"@/pages/News.vue\";\r\nimport Message from \"@/pages/Message.vue\";\r\nimport Detail from \"@/pages/Detail.vue\";\r\n// 创建并暴露一个路由器\r\nconst router = new VueRouter({\r\n    routes: [\r\n        {\r\n            name: 'guanyu',\r\n            path: '/about',\r\n            component: About\r\n        },\r\n        {\r\n            name: 'zhuye',\r\n            path: '/home',\r\n            component: Home,\r\n            children: [\r\n                {\r\n                    name: 'xinwen',\r\n                    path: 'news',\r\n                    component: News,\r\n                    meta: {isAuth: false}\r\n                },\r\n                {\r\n                    name: 'xiaoxi',\r\n                    path: 'message',\r\n                    component: Message,\r\n                    meta: {isAuth: false},\r\n                    children: [\r\n                        {\r\n                            name: 'xiangqing',\r\n                            // detail后面的两个为之后的传参占个位\r\n                            path: 'detail/:id/:title',\r\n                            component: Detail,\r\n                            // props的第一种写法，值为对象，该对象中的所有key-value都会以props的形式传给Detail组件\r\n                            // props: {\r\n                            //     a: 1,\r\n                            //     b: 'hello'\r\n                            // }\r\n\r\n                            // props的第二种写法，值为布尔值，若布尔值为真，则会把该路由组件收到的所有params参数，以props的形式传给Detail组件\r\n                            // props: true\r\n\r\n                            // props的第三种写法，值为函数，\r\n                            props($route) {\r\n                                return {\r\n                                    id: $route.query.id,\r\n                                    title: $route.query.title\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n})\r\n\r\n// 全局前置路由守卫：初始化的时候被调用以及每次路由切换之前自动调用\r\nrouter.beforeEach((to, from, next) => {\r\n    console.log(to, from, next)\r\n    if (to.meta.isAuth) {  // 判断是否需要鉴权\r\n        if (localStorage.getItem('name') === 'xiaohong') {\r\n            next() //放行，接着往下走\r\n        } else {\r\n            alert('名字有误，没有权限查看！')\r\n        }\r\n    } else {\r\n        next()\r\n    }\r\n\r\n})\r\n\r\n// 后置路由守卫\r\nrouter.afterEach((to, from, next) => {\r\n    if (to.meta.isAuth) {  // 判断是否需要鉴权\r\n        if (localStorage.getItem('name') === 'xiaohong') {\r\n            next() //放行，接着往下走\r\n        } else {\r\n            alert('名字有误，没有权限查看！')\r\n        }\r\n    } else {\r\n        next()\r\n    }\r\n})\r\n\r\nexport default router"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,MAAM,MAAM,oBAAoB;AACvC;AACA,MAAMC,MAAM,GAAG,IAAIN,SAAS,CAAC;EACzBO,MAAM,EAAE,CACJ;IACIC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAET;EACf,CAAC,EACD;IACIO,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAER,IAAI;IACfS,QAAQ,EAAE,CACN;MACIH,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,MAAM;MACZC,SAAS,EAAEP,IAAI;MACfS,IAAI,EAAE;QAACC,MAAM,EAAE;MAAK;IACxB,CAAC,EACD;MACIL,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,SAAS;MACfC,SAAS,EAAEN,OAAO;MAClBQ,IAAI,EAAE;QAACC,MAAM,EAAE;MAAK,CAAC;MACrBF,QAAQ,EAAE,CACN;QACIH,IAAI,EAAE,WAAW;QACjB;QACAC,IAAI,EAAE,mBAAmB;QACzBC,SAAS,EAAEL,MAAM;QACjB;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACAS,KAAKA,CAACC,MAAM,EAAE;UACV,OAAO;YACHC,EAAE,EAAED,MAAM,CAACE,KAAK,CAACD,EAAE;YACnBE,KAAK,EAAEH,MAAM,CAACE,KAAK,CAACC;UACxB,CAAC;QACL;MACJ,CAAC;IAET,CAAC;EAET,CAAC;AAET,CAAC,CAAC;;AAEF;AACAZ,MAAM,CAACa,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClCC,OAAO,CAACC,GAAG,CAACJ,EAAE,EAAEC,IAAI,EAAEC,IAAI,CAAC;EAC3B,IAAIF,EAAE,CAACR,IAAI,CAACC,MAAM,EAAE;IAAG;IACnB,IAAIY,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;MAC7CJ,IAAI,EAAE,EAAC;IACX,CAAC,MAAM;MACHK,KAAK,CAAC,cAAc,CAAC;IACzB;EACJ,CAAC,MAAM;IACHL,IAAI,EAAE;EACV;AAEJ,CAAC,CAAC;;AAEF;AACAhB,MAAM,CAACsB,SAAS,CAAC,CAACR,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACjC,IAAIF,EAAE,CAACR,IAAI,CAACC,MAAM,EAAE;IAAG;IACnB,IAAIY,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;MAC7CJ,IAAI,EAAE,EAAC;IACX,CAAC,MAAM;MACHK,KAAK,CAAC,cAAc,CAAC;IACzB;EACJ,CAAC,MAAM;IACHL,IAAI,EAAE;EACV;AACJ,CAAC,CAAC;AAEF,eAAehB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}