{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\n// 该文件用于创建Vuex中最为核心的store\n\n// 引入Vuex\nimport Vuex from \"vuex\";\nimport Vue from \"vue\";\n\n// 使用插件，必须写在该文件中，否则会因执行顺序而报错\nVue.use(Vuex);\n\n// 求和功能相关的配置\nconst countOptions = {\n  actions: {},\n  mutations: {},\n  state: {},\n  getters: {}\n};\n\n// 准备actions，用于响应组件里面的动作，所有的业务逻辑都要写在actions中不能卸载mutations中\n// 另外没有业务逻辑的就不用在actions中写了，直接传给mutations去处理\nconst actions = {\n  jiaOdd(context, value) {\n    if (context.state.sum % 2) {\n      context.commit('JIA', value);\n    }\n    console.log('actions被调用了');\n  },\n  jiaWait(context, value) {\n    setTimeout(() => {\n      context.commit('JIA', value);\n    }, 500);\n    console.log('actions被调用了');\n  }\n};\n\n// 准备mutations，用于加工数据\nconst mutations = {\n  JIA(state, value) {\n    state.sum += value;\n    console.log('mutations被调用了');\n  },\n  JIAN(state, value) {\n    state.sum -= value;\n    console.log('mutations被调用了');\n  },\n  ADD_PERSON(state, value) {\n    state.personList.unshift(value);\n    console.log('mutations中的ADD_PERSON被调用了');\n  }\n};\n\n// 准备state，用于存储数据\nconst state = {\n  sum: 0,\n  //当前的和:\n  school: 'GEO',\n  subject: '前端',\n  personList: [{\n    id: '001',\n    name: '小红'\n  }]\n};\n\n// 准备getters，用于加工state中的数据\n\nconst getters = {\n  bigSum() {\n    return state.sum * 10;\n  }\n};\n// 创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state,\n  getters\n});","map":{"version":3,"names":["Vuex","Vue","use","countOptions","actions","mutations","state","getters","jiaOdd","context","value","sum","commit","console","log","jiaWait","setTimeout","JIA","JIAN","ADD_PERSON","personList","unshift","school","subject","id","name","bigSum","Store"],"sources":["C:/Users/13511/Desktop/Vue/Vue/cli_test/src/vuex/store.js"],"sourcesContent":["// 该文件用于创建Vuex中最为核心的store\r\n\r\n// 引入Vuex\r\nimport Vuex from \"vuex\";\r\nimport Vue from \"vue\";\r\n\r\n// 使用插件，必须写在该文件中，否则会因执行顺序而报错\r\nVue.use(Vuex)\r\n\r\n// 求和功能相关的配置\r\nconst countOptions={\r\n    actions:{},\r\n    mutations:{},\r\n    state:{},\r\n    getters:{}\r\n}\r\n\r\n\r\n// 准备actions，用于响应组件里面的动作，所有的业务逻辑都要写在actions中不能卸载mutations中\r\n// 另外没有业务逻辑的就不用在actions中写了，直接传给mutations去处理\r\nconst actions = {\r\n    jiaOdd(context, value) {\r\n        if (context.state.sum % 2) {\r\n            context.commit('JIA', value)\r\n        }\r\n        console.log('actions被调用了')\r\n    },\r\n    jiaWait(context, value) {\r\n        setTimeout(() => {\r\n            context.commit('JIA', value)\r\n        }, 500)\r\n        console.log('actions被调用了')\r\n    }\r\n}\r\n\r\n// 准备mutations，用于加工数据\r\nconst mutations = {\r\n    JIA(state, value) {\r\n        state.sum += value\r\n        console.log('mutations被调用了')\r\n    },\r\n    JIAN(state, value) {\r\n        state.sum -= value\r\n        console.log('mutations被调用了')\r\n    },\r\n    ADD_PERSON(state, value) {\r\n        state.personList.unshift(value)\r\n        console.log('mutations中的ADD_PERSON被调用了')\r\n    }\r\n}\r\n\r\n// 准备state，用于存储数据\r\nconst state = {\r\n    sum: 0,  //当前的和:\r\n    school: 'GEO',\r\n    subject: '前端',\r\n    personList: [\r\n        {id: '001', name: '小红'}\r\n    ]\r\n}\r\n\r\n// 准备getters，用于加工state中的数据\r\n\r\nconst getters = {\r\n    bigSum() {\r\n        return state.sum * 10\r\n    }\r\n}\r\n// 创建并暴露store\r\nexport default new Vuex.Store({\r\n    actions,\r\n    mutations,\r\n    state,\r\n    getters\r\n})\r\n"],"mappings":";AAAA;;AAEA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,GAAG,MAAM,KAAK;;AAErB;AACAA,GAAG,CAACC,GAAG,CAACF,IAAI,CAAC;;AAEb;AACA,MAAMG,YAAY,GAAC;EACfC,OAAO,EAAC,CAAC,CAAC;EACVC,SAAS,EAAC,CAAC,CAAC;EACZC,KAAK,EAAC,CAAC,CAAC;EACRC,OAAO,EAAC,CAAC;AACb,CAAC;;AAGD;AACA;AACA,MAAMH,OAAO,GAAG;EACZI,MAAMA,CAACC,OAAO,EAAEC,KAAK,EAAE;IACnB,IAAID,OAAO,CAACH,KAAK,CAACK,GAAG,GAAG,CAAC,EAAE;MACvBF,OAAO,CAACG,MAAM,CAAC,KAAK,EAAEF,KAAK,CAAC;IAChC;IACAG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B,CAAC;EACDC,OAAOA,CAACN,OAAO,EAAEC,KAAK,EAAE;IACpBM,UAAU,CAAC,MAAM;MACbP,OAAO,CAACG,MAAM,CAAC,KAAK,EAAEF,KAAK,CAAC;IAChC,CAAC,EAAE,GAAG,CAAC;IACPG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B;AACJ,CAAC;;AAED;AACA,MAAMT,SAAS,GAAG;EACdY,GAAGA,CAACX,KAAK,EAAEI,KAAK,EAAE;IACdJ,KAAK,CAACK,GAAG,IAAID,KAAK;IAClBG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAChC,CAAC;EACDI,IAAIA,CAACZ,KAAK,EAAEI,KAAK,EAAE;IACfJ,KAAK,CAACK,GAAG,IAAID,KAAK;IAClBG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAChC,CAAC;EACDK,UAAUA,CAACb,KAAK,EAAEI,KAAK,EAAE;IACrBJ,KAAK,CAACc,UAAU,CAACC,OAAO,CAACX,KAAK,CAAC;IAC/BG,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC5C;AACJ,CAAC;;AAED;AACA,MAAMR,KAAK,GAAG;EACVK,GAAG,EAAE,CAAC;EAAG;EACTW,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,IAAI;EACbH,UAAU,EAAE,CACR;IAACI,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAI,CAAC;AAE/B,CAAC;;AAED;;AAEA,MAAMlB,OAAO,GAAG;EACZmB,MAAMA,CAAA,EAAG;IACL,OAAOpB,KAAK,CAACK,GAAG,GAAG,EAAE;EACzB;AACJ,CAAC;AACD;AACA,eAAe,IAAIX,IAAI,CAAC2B,KAAK,CAAC;EAC1BvB,OAAO;EACPC,SAAS;EACTC,KAAK;EACLC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}